---
# Reference: https://cdn.yadifa.eu/sites/default/files/YRM239.pdf

yadifa_hostname: "{{ ansible_hostname }}"
yadifa_nsid: "{{ ansible_hostname }}"
yadifa_log_queries: no
# Detach from the console - default if systemd is enabled
yadifa_daemon: no
yadifa_statistics: yes
yadifa_chroot: no

# to enable debuggin of any of the channels set it to `*`, for example:
# yadifa_loggers:
#   queries: *
#   stats: *
yadifa_loggers:
  dnssec: EMERG,ALERT,CRIT,ERR,WARNING,NOTICE
  database: EMERG,ALERT,CRIT,ERR,WARNING,NOTICE
  server: EMERG,ALERT,CRIT,ERR,WARNING,NOTICE
  stats: EMERG,ALERT,CRIT,ERR,WARNING,NOTICE
  system: EMERG,ALERT,CRIT,ERR,WARNING,NOTICE
  zone: EMERG,ALERT,CRIT,ERR,WARNING,NOTICE
  queries: EMERG,ALERT,CRIT,ERR,WARNING,NOTICE

# Set the maximum UDP packet size. Cannot be less than 512. Cannot be
# more than 65535.  Typical choice is 4096.
yadifa_edns0_max_size: 4096

# Show DS records for all domains at the end of play run
yadifa_show_ds: no

yadifa_data_dir: /var/lib/yadifa
yadifa_masters_dir: "{{ yadifa_data_dir }}/masters"
yadifa_keys_dir: "{{ yadifa_data_dir }}/keys"

yadifa_listen:
- "0.0.0.0"
- "::"

yadifa_zones: [] # remove [] if you define this
# - type: master
#   domain: webcookies.eu
#   file: dns/master/webcookies.eu.zone
#   allow_transfer: cloudns
#   allow_update: none
#   allow_update_fw: none
#   dnssec_policy: compatible-policy

#
# - type: master
#   domain: webcookies.pub
#   file: dns/master/webcookies.eu.zone
#   allow_transfer: cloudns
#   allow_update: none
#   allow_update_fw: none
#   dnssec_policy: ecdsa-policy

yadifa_dnssec_keys: [] # remove [] if you define this
## keys: is optional; if keys are not managed by Ansible, they will be
## generated by Yadifa
## using Ansible-managed keys
#   - dns/keys/Kwebcookies.pub.+013+03503.key
#   - dns/keys/Kwebcookies.pub.+013+03503.private
#   - dns/keys/Kwebcookies.pub.+013+42080.key
#   - dns/keys/Kwebcookies.pub.+013+42080.private

yadifa_dnssec_policies:
- id: compatible-policy
  description: Policy with RSASHA256 keys compatible with older nameservers
  denial: nsec3-random
  key_suites:
  - zsk-1024
  - ksk-2048
- id: ecdsa-policy
  description: Modern policy with ECDSAP256SHA256 keys
  denial: nsec3-random
  key_suites:
  - zsk-ecdsa-256
  - ksk-ecdsa-256

yadifa_dnssec_keysuites:
- id: zsk-1024
  template: zsk-rsa-sha256-1024
  roll: monthly-diary
- id: ksk-2048
  template: ksk-rsa-sha256-2048
  roll: yearly-diary
- id: zsk-ecdsa-256
  template: zsk-ecdsa-sha256-256
  roll: monthly-diary
- id: ksk-ecdsa-256
  template: ksk-ecdsa-sha256-256
  roll: yearly-diary

yadifa_dnssec_keytemplates:
- id: zsk-rsa-sha256-1024
  algorithm: RSASHA256
  size: 1024
- id: ksk-rsa-sha256-2048
  algorithm: RSASHA256
  size: 2048
  ksk: yes
- id: zsk-ecdsa-sha256-256
  algorithm: ECDSAP256SHA256
  size: 256
- id: ksk-ecdsa-sha256-256
  algorithm: ECDSAP256SHA256
  size: 256
  ksk: yes

yadifa_keys: []
# Generate T-SIG keys with `openssl rand -base64 32`
# - name: controller-key
#   algorithm: hmac-sha256
#   secret: LYHjUHOIAvHXnHa3kUPf7w==

# Configuration for yadifa *client* command-line utility
# These must match `yadifa_keys` entry used in `yadifa_acls` for controller
# yadifa_cli_server: "::1"
# yadifa_cli_algo: hmac-sha256
# yadifa_cli_secret: LYHjUHOIAvHXnHa3kUPf7w==

yadifa_acls: []
# - name: controller
#   value: key controller-key
# - name: cloudns
#   value: >
#     2a00:1768:1001:9::31:1, 2605:fe80:2100:a013:7::1,
#     2a0b:1640:1:1:1:1:8ec:5a47, 2a06:fb00:1::1:66,
#     2a06:fb00:1::2:66, 2a06:fb00:1::3:66, 2a06:fb00:1::4:66,
#     2a0b:1640:1:3::1, 2001:41d0:305:2100::32b4

# names of the ACLs to allow specific features from
# these *must* match the ACL names defined in `yadifa_acls`
# or be one of `none` or `any`
yadifa_global_allow_control: none
yadifa_global_allow_query: any
yadifa_global_allow_update: none
yadifa_global_allow_transfer: none
yadifa_global_allow_notify: none

# yadifa_nsec3_salt: BA5EBA11
yadifa_nsec3_optout: yes
yadifa_nsec3_salt_len: 32
yadifa_nsec3_salt_iter: 10
