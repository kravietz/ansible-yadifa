---
- name: yadifa package installed
  apt:
    name: yadifa

- name: yadifa client configuration
  template:
    dest: /etc/yadifa.conf
    src: templates/yadifa.conf.j2
    owner: root
    group: yadifa
    mode: 0640
  when: yadifa_global_allow_control != "none"

- name: yadifad server configuration
  template:
    dest: /etc/yadifa/yadifad.conf
    src: templates/yadifad.conf.j2
    owner: root
    group: yadifa
    mode: 0640
  notify:
  - yadifa cfgreload

- name: sync zone journals # noqa 301
  command: "yadifa -s {{ yadifa_cli_server }} sync {{ item.domain }} clean"
  loop: "{{ yadifa_zones }}"
  ignore_errors: yes # yadifa service may not be yet started

- name: freeze zones prior to possible zone file updates # noqa 301
  command: "yadifa -s {{ yadifa_cli_server }} freeze {{ item.domain }}"
  loop: "{{ yadifa_zones }}"
  ignore_errors: yes

- name: key files
  template:
    src: "{{ item }}"
    dest: "{{ yadifa_keys_dir }}/{{ item | basename }}"
    owner: yadifa
    group: yadifa
    mode: 0640
  loop: "{{ yadifa_dnssec_keys }}"

- name: zone files
  copy:
    src: "{{ item.file }}"
    dest: "{{ yadifa_masters_dir }}/{{ item.file | basename }}"
    owner: yadifa
    group: yadifa
    mode: 0640
  loop: "{{ yadifa_zones }}"
  notify:
  - yadifa reload zones

- name: unfreeze zones # noqa 301
  command: "yadifa -s {{ yadifa_cli_server }} unfreeze {{ item.domain }}"
  loop: "{{ yadifa_zones }}"
  ignore_errors: yes

- name: yadifad AppArmor profile
  copy:
    src: files/apparmor/usr.sbin.yadifad
    dest: /etc/apparmor.d/usr.sbin.yadifad
    owner: root
    group: root
    mode: 0644
  notify:
  - yadifad apparmor

- name: yadifa systemd override directory
  file:
    dest: /etc/systemd/system/yadifa.service.d
    owner: root
    group: root
    mode: 0755

- name: yadifa systemd override service
  template:
    src: templates/systemd.ini
    dest: /etc/systemd/system/yadifa.service.d/override.conf
    owner: root
    group: root
    mode: 0644
  notify:
  - systemd daemon reload

- name: yadifa service started
  service:
    name: yadifa
    state: started
    enabled: yes

  # required for dnssec-dsfromkey
- name: bind9utils package installed
  apt:
    name: bind9utils
  when: yadifa_show_ds

- name: obtain DS records # noqa 301
  shell: "dig dnskey {{ item.domain }} @{{ yadifa_cli_server }} | dnssec-dsfromkey -f - {{ item.domain }}"
  loop: "{{ yadifa_zones }}"
  register: ds
  ignore_errors: yes

- name: display DS records
  debug:
    msg: "{% for res in ds.results %}{{ res.stdout_lines }}{% endfor %}"
  when: yadifa_show_ds
